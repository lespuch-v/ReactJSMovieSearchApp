{"version":3,"sources":["component/Header.js","component/MovieCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Card","props","movie","className","map","item","src","poster_path","alt","title","vote_average","vote_count","release_date","overview","id","App","useState","query","setQuarry","setMovie","searchForMovies","e","a","preventDefault","URL","fetch","response","json","data","results","onSubmit","onKeyUp","event","charCode","this","setState","inputValue","target","value","htmlFor","type","name","placeholder","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAWeA,MAPf,WACI,OACA,8BACI,qDCyBOC,MA9Bf,SAAcC,GACV,IAAMC,EAAQD,EAAMC,MACpB,OACI,qBAAKC,UAAU,gBAAf,SACCD,EAAME,KAAI,SAACC,GAAD,OACT,sBAAKF,UAAU,OAAf,UACE,qBACEG,IAAG,0CAAqCD,EAAKE,aAC7CC,IAAI,WAEN,sBAAKL,UAAU,iBAAf,UACA,6BAAKE,EAAKI,QACV,qBACEN,UACEE,EAAKK,cAAgB,EAAI,iBAAmB,mBAFhD,6BAKmBL,EAAKK,aALxB,WAK8CL,EAAKM,cAEnD,2CAAcN,EAAKO,gBACnB,4BAAIP,EAAKQ,gBAfgBR,EAAKS,U,YC8C3BC,MA/Cf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOd,EAAP,KAAciB,EAAd,KAEMC,EAAe,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACtBD,EAAEE,iBACe,mCAETC,EAJc,4DAEL,mCAFK,kBAI6DP,GAJ7D,SAMGQ,MAAMD,GANT,cAMdE,EANc,gBAODA,EAASC,OAPR,OAOdC,EAPc,OAQpBT,EAASS,EAAKC,SARM,4CAAH,sDAgBrB,OACE,sBAAK1B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,MAEF,uBAAMA,UAAU,SAAS2B,SAAUV,EAAiBW,QAXxD,SAAiBC,GACQ,KAAnBA,EAAMC,UACRC,KAAKC,SAAS,CAAEC,WAAYJ,EAAMK,OAAOC,SASzC,UACE,wBAAOnC,UAAU,UAAUoC,QAAQ,QAAnC,wBACc,OAEd,uBACEpC,UAAU,UACVqC,KAAK,OACLC,KAAK,QACLC,YAAY,oCACZJ,MAAOrB,EACP0B,SAAU,SAACtB,GAAD,OAAOH,EAAUG,EAAEgB,OAAOC,UAEtC,yBAAQnC,UAAU,QAAQqC,KAAK,SAA/B,UACE,mBAAGrC,UAAU,kBADf,eAIF,cAAC,EAAD,CAAMD,MAAOA,QCnCJ0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2b04762.chunk.js","sourcesContent":["import \"./Header.css\"\r\nimport React from \"react\";\r\n\r\n\r\nfunction Header(){\r\n    return(\r\n    <div>\r\n        <h1>Movie Search APP</h1>\r\n    </div>)\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nfunction Card(props){\r\n    const movie = props.movie\r\n    return(\r\n        <div className=\"cardMovieList\">\r\n        {movie.map((item) => (\r\n          <div className=\"card\" key={item.id}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n              alt=\"poster\"\r\n            />\r\n            <div className=\"cardTextFormat\">\r\n            <h2>{item.title}</h2>\r\n            <h4\r\n              className={\r\n                item.vote_average <= 6 ? \"avrgRating-red\" : \"avrgRating-green\"\r\n              }\r\n            >\r\n              Average Rating: {item.vote_average} Voted: {item.vote_count}\r\n            </h4>\r\n            <h4>Release: {item.release_date}</h4>\r\n            <p>{item.overview}</p>\r\n          </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Card","import { useState } from \"react\";\nimport Header from \"../src/component/Header\";\nimport Card  from \"./component/MovieCard\";\nimport Form from \"./component/Form\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuarry] = useState(\"\");\n  const [movie, setMovie] = useState([]);\n\n  const searchForMovies = async (e) => {\n    e.preventDefault();\n      const APIKEY = \"da420b86771b9f3c36fb68be17477680\";\n      // const query = \"Batman\";\n      const URL = `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${query}`;\n  \n      const response = await fetch(URL);\n      const data = await response.json();\n      setMovie(data.results);\n  };\n  function onKeyUp(event) {\n    if (event.charCode === 13) {\n      this.setState({ inputValue: event.target.value });\n    }\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <form className=\"myForm\" onSubmit={searchForMovies} onKeyUp={onKeyUp}>\n        <label className=\"myLabel\" htmlFor=\"query\">\n          Movie Name:{\" \"}\n        </label>\n        <input\n          className=\"myInput\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search for movie, tv show... God?\"\n          value={query}\n          onChange={(e) => setQuarry(e.target.value)}\n        />\n        <button className=\"myBtn\" type=\"submit\">\n          <i className=\"fas fa-search\"></i>Search\n        </button>\n      </form>\n      <Card movie={movie} />\n      </div>\n\n  );\n}\n\nexport default App;\n// https://www.themoviedb.org/t/p/w600_and_h900_bestv2/t5mbrd79o89pYB8OQ4QPFNkIRPm.jpg\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}